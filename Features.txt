- my own shuffle algorithm will be using the weighted similarities
  - consider how to keep song from the same artists relatively different
  - trying to keep songs a bit more different in terms of everything so it feel "random"
  - maybe don't even need to separate artists all together
  - select couple of songs (couple could be calculate base on playlist size)
  - then find all the songs feel different compare to it, push them all in the first block of the playlist.
  - then trueshuffle all the songs within the block.
  - repeat until the entire playlist is shuffled.
  - since we are also swapping songs here, could create a more random effect as well.

- Need to rework Statistics shuffle
  - When recieved a playlist, randomly select one song
  - calculate the weightStat for every song toward that one song.
  - find the median value of the weightStat, anything above will be in a new list, anything below will be in another new list
  - Randomly select one from the above list and then randomly select one from the below list. 
  - Continue the previous step until both list is empty.
  - append that to a new playlist and return result.
- Can try to reorder the result of the java shuffle function to the playlist by reordering it. (Might be a lot of works)
- Make APICall.sh -> A JS File to read and create condensed file for faster operations.